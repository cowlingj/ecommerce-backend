{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
      group: {{ .Values.group }}
      version: {{ .Values.version }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        group: {{ .Values.group }}
        version: {{ .Values.version }}
    spec:
      {{ if .Values.imagePullSecret -}}
        imagePullSecrets:
          - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
        - name: main
          image: {{ printf "\"%s:%s\"" .Values.image .Values.version }}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          env:
            - name: PORT
              value: "80"
            - name: HOST
              value: "0.0.0.0"
            - name: SECRETS_DIR
              value: /etc/secrets
            - name: IZETTLE_CREDENTIALS_FILE
              value: izettle/credentials.json
            - name: IZETTLE_AUTH_URI
              value: {{ .Values.izettleEndpoints.auth }}
            - name: IZETTLE_PRODUCTS_URI
              value: {{ .Values.izettleEndpoints.products }}
          volumeMounts:
            - name: izettle-credentials-volume
              mountPath: /etc/secrets/izettle
              readOnly: true
      volumes:
        - name: izettle-credentials-volume
          secret:
            secretName: {{ .Values.credentialsSecretName }}
            items:
              - key: credentials
                path: credentials.json
          ports:
            - containerPort: 80
          readinessProbe:
            tcpSocket:
              port: 80
{{- end }}
---
{{- if and .Values.enabled (not .Values.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.credentialsSecretName }}
  labels:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
type: Opaque
data:
  credentials: {{ .Values.izettleCredentials | toJson | b64enc | quote }}
{{- end }}
---
{{ if .Values.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
spec:
  type: {{ .Values.service.type | default "ClusterIP" }}
  selector:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
  ports:
    {{- with .Values.ports.main }}
    - name: {{ printf "\"%s-%s\"" .protocol .name }}
      port: {{ .port }}
      protocol: TCP
      targetPort: 80
    {{- end }}
{{- end }}
