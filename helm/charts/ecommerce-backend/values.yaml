all: &all
  env: production
  enabled: true
  peerDependenciesHandled: true

elasticsearch:
  <<: *all 

auth:
  <<: *all
  fusionauth:
    app:
      version: latest
    search:
      servers: http://elasticsearch-0.elasticsearch.svc.cluster.local:9200
  init:
    image: gcr.io/gke-test-253221/init.auth.admin
    version: 0.0.1

mongodb-config:
  <<: *all
  name: &mongodb-config-name mongodb
  group: data
  version: "0.0.1"
  rootPassword: null # generate random password
  mongodbPassword: null # generate random password

mongodb:
  image:
    tag: 4.2.0
    debug: false
  service:
    name: mongodb
    port: 8080
  existingSecret: *mongodb-config-name
  mongodbUsername: &mongodb-admin-username admin
  mongodbDatabase: &mongodb-admin-database admin
  resources:
    limits:
      cpu: 100m
      memory: 256Mi
    request:
      cpu: 50m
      memory: 128Mi
  persistence:
    # storageClass: standard
    size: 128Mi
  podLabels:
    group: data

postgres:
  <<: *all

cms:
  <<: *all
  name: cms
  group: frontend
  image: "gcr.io/gke-test-253221/cms.admin"
  imagePullSecret: gcr
  version: "0.0.1"
  mongodbHost: "mongodb.mongodb:8080"
  mongodbCmsDbName: &cms-db-name cms
  mongodbAdminDbName: *mongodb-admin-database
  cookieSecret: null
  ports:
    ui:
      port: 80
      protocol: http
      name: ui
    api:
      port: 8080
      protocol: http
      name: api
  init:
    mongodb:
      admin:
        secretName: *mongodb-config-name
        mongodbUsername: *mongodb-admin-username
        mongodbDatabase: *mongodb-admin-database
      cms:
        name: mongodb-cms-config
        existingSecret: false
        secretName: cms-mongodb
        mongodbUsername: cms
        mongodbDatabase: *cms-db-name
        mongodbPassword: null # generate random password
