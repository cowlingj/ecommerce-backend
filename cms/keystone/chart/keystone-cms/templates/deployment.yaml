apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keystone-cms.fullname" . }}
  labels:
{{ include "keystone-cms.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "keystone-cms.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "keystone-cms.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: mongodb
          image: "{{ .Values.image.init.repository }}:{{ .Values.image.init.tag }}"
          imagePullPolicy: {{ .Values.image.init.pullPolicy }}
          env:
            - name: ADMIN_USERNAME
              value: {{ .Values.mongodb.admin.username | quote }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.secrets.mongodbAdmin .) }}
                  key: mongodb-root-password
            - name: ADMIN_DB
              value: {{ .Values.mongodb.admin.database | quote }}
            - name: CMS_USERNAME
              value: {{ .Values.mongodb.cms.username | quote }}
            - name: CMS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.secrets.mongodbCms .) }}
                  key: mongodb-password
            - name: CMS_DB
              value: {{ .Values.mongodb.cms.database | quote }}
            - name: DB_HOST
              value: {{ .Values.mongodb.host | quote }}
            - name: DB_PORT
              value: {{ .Values.mongodb.port | quote }}
          resources: {{- toYaml .Values.resources.init | nindent 12 }}
      containers:
        - name: main
          image: "{{ .Values.image.main.repository }}:{{ .Values.image.main.tag }}"
          imagePullPolicy: {{ .Values.image.main.pullPolicy }}
          resources: {{- toYaml .Values.resources.main | nindent 12 }}
          ports:
            - name: http-main
              containerPort: 80
          {{- if and .Values.livenessProbe }}
          livenessProbe: {{ tpl .Values.livenessProbe . | nindent 12 }}
          {{- end }}
          {{- if and .Values.readinessProbe }}
          readinessProbe: {{ tpl .Values.readinessProbe . | nindent 12 }}
          {{- end }}
          {{- if and .Values.startupProbe (ge (atoi .Capabilities.KubeVersion.Major) 1) (ge (atoi .Capabilities.KubeVersion.Minor) 16) }}
          startupProbe: {{ tpl .Values.startupProbe . | nindent 12 }}
          {{- end }}
          env:
            - name: BASE_PATH
              value: {{ .Values.basePath | quote }}
            - name: COOKIE_SECRET
              value: {{ default (randAlphaNum 32) .Values.cookieSecret }}
            - name: DB_USERNAME
              value: {{ .Values.mongodb.cms.username | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.secrets.mongodbCms .) }}
                  key: mongodb-password
            - name: DB_HOST
              value: {{ .Values.mongodb.host | quote }}
            - name: DB_PORT
              value: {{ .Values.mongodb.port | quote }}
            - name: DB_NAME
              value: {{ .Values.mongodb.cms.database | quote }}
            - name: DB_QUERY_STRING
              value: {{ printf "\"authSource=%s\"" .Values.mongodb.admin.database }}
            - name: NODE_ENV
              value: {{ .Values.env | quote }}
            - name: PORT
              value: "80"
            {{ if not .Values.features.events -}}
            - name: FLAG_DISABLE_EVENTS
              value: "true"
            {{- end }}
            {{ if not .Values.features.products -}}
            - name: FLAG_DISABLE_PRODUCTS
              value: "true"
            {{- end }}
            {{ if not .Values.features.resources -}}
            - name: FLAG_DISABLE_RESOURCES
              value: "true"
            {{- end }}
            {{ if .Values.secrets.users -}}
            - name: USERS_FILE
              value: /etc/secrets/users/users.json
            {{- end }}
            {{ if .Values.secrets.strings -}}
            - name: STRINGS_FILE
              value: /etc/secrets/strings/strings.json
            {{- end }}
          volumeMounts:
            {{ if .Values.secrets.users -}}
            - name: user-data-volume
              mountPath: /etc/secrets/users/
              readOnly: true
            {{- end }}
            {{ if .Values.secrets.strings -}}
            - name: string-data-volume
              mountPath: /etc/secrets/strings/
              readOnly: true
            {{- end }}
        {{ if .Values.authAdmin.enabled }}
        - name: auth-admin
          image: "{{ .Values.authAdmin.image.repository }}:{{ .Values.authAdmin.image.tag }}"
          imagePullPolicy: {{ .Values.authAdmin.image.pullPolicy }}
          resources: {{- toYaml .Values.authAdmin.resources | nindent 12 }}
          ports:
            - name: http-admin
              containerPort: 81
          {{- if and .Values.authAdmin.livenessProbe }}
          livenessProbe: {{ tpl .Values.authAdmin.livenessProbe . | nindent 12 }}
          {{- end }}
          {{- if and .Values.authAdmin.readinessProbe }}
          readinessProbe: {{ tpl .Values.authAdmin.readinessProbe . | nindent 12 }}
          {{- end }}
          {{- if and .Values.authAdmin.startupProbe (ge (atoi .Capabilities.KubeVersion.Major) 1) (ge (atoi .Capabilities.KubeVersion.Minor) 16) }}
          startupProbe: {{ tpl .Values.authAdmin.startupProbe . | nindent 12 }}
          {{- end }}
          command:
          - /bin/sh
          args:
          - -c
          - >-
            /opt/keycloak-gatekeeper
            --client-id="{{ .Values.authAdmin.config.clientId }}"
            --client-secret="$CLIENT_SECRET"
            --discovery-url="{{ .Values.authAdmin.config.discoveryUrl }}"
            --no-redirects=false
            --upstream-url="{{ .Values.authAdmin.config.upstreamUrl }}"
            --redirection-url="{{ .Values.authAdmin.config.redirectionUrl }}"
            --listen="0.0.0.0:81"
            --openid-provider-proxy="{{ .Values.authAdmin.config.proxyUrl }}"
            --encryption-key="$ENCRYPTION_KEY"
            --skip-upstream-tls-verify=false
            --skip-openid-provider-tls-verify=false
            --enable-logging=true
            --enable-json-logging=true
            --enable-default-deny="{{ .Values.authAdmin.config.defaultDeny }}"
            --enable-refresh-tokens=true
            --enable-session-cookies=true
            --secure-cookie={{ .Values.authAdmin.config.secureCookie }}
            --base-uri="{{ .Values.basePath }}"
            {{ range .Values.authAdmin.config.resources -}}
            --resources="{{ . }}"
            {{- end }}
          env:
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.authAdmin.secrets.clientSecret .) }}
                  key: {{ .Values.authAdmin.config.clientSecretSecretKey }}
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.authAdmin.secrets.encryptionKey .) }}
                  key: {{ .Values.authAdmin.config.encryptionKeySecretKey }}
        {{- end }}
        {{ if .Values.authApi.enabled }}
        - name: auth-api
          image: "{{ .Values.authApi.image.repository }}:{{ .Values.authApi.image.tag }}"
          imagePullPolicy: {{ .Values.authApi.image.pullPolicy }}
          resources: {{- toYaml .Values.authApi.resources | nindent 12 }}
          ports:
            - name: http-api
              containerPort: 82
          {{- if and .Values.authApi.livenessProbe }}
          livenessProbe: {{ tpl .Values.authApi.livenessProbe . | nindent 12 }}
          {{- end }}
          {{- if and .Values.authApi.readinessProbe }}
          readinessProbe: {{ tpl .Values.authApi.readinessProbe . | nindent 12 }}
          {{- end }}
          {{- if and .Values.authApi.startupProbe (ge (atoi .Capabilities.KubeVersion.Major) 1) (ge (atoi .Capabilities.KubeVersion.Minor) 16) }}
          startupProbe: {{ tpl .Values.authApi.startupProbe . | nindent 12 }}
          {{- end }}
          command: 
          - /bin/sh
          args:
          - -c
          - >-
            /opt/keycloak-gatekeeper
            --client-id="{{ .Values.authApi.config.clientId }}"
            --client-secret="$CLIENT_SECRET"
            --discovery-url="{{ .Values.authApi.config.discoveryUrl }}"
            --no-redirects=true
            --upstream-url="{{ .Values.authApi.config.upstreamUrl }}"
            --listen="0.0.0.0:82"
            --openid-provider-proxy="{{ .Values.authApi.config.proxyUrl }}"
            --encryption-key="$ENCRYPTION_KEY"
            --skip-upstream-tls-verify=false
            --skip-openid-provider-tls-verify=false
            --enable-logging=true
            --enable-json-logging=true
            --enable-default-deny="{{ .Values.authApi.config.defaultDeny }}"
            --enable-refresh-tokens=true
            --enable-session-cookies=true
            --base-uri="{{ .Values.basePath }}"
            {{ range .Values.authApi.config.resources -}}
            --resources="{{ . }}"
            {{- end }}
          env:
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.authApi.secrets.clientSecret .) }}
                  key: {{ .Values.authApi.config.clientSecretSecretKey }}
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "keystone-cms.scopedName" (list .Values.authApi.secrets.encryptionKey .) }}
                  key: {{ .Values.authApi.config.encryptionKeySecretKey }}
        {{- end }}
      volumes:
        {{ if .Values.secrets.users -}}
        - name: user-data-volume
          secret:
            secretName: {{ include "keystone-cms.scopedName" (list .Values.secrets.users .) }}
            items:
              - key: users
                path: users.json
        {{- end }}
        {{ if .Values.secrets.strings -}}
        - name: string-data-volume
          secret:
            secretName: {{ include "keystone-cms.scopedName" (list .Values.secrets.strings .) }}
            items:
              - key: strings
                path: strings.json
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
