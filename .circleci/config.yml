version: 2.1
workflows:
  version: 2
  workflow:
    jobs:
      - build-cms-main:
          filters:
            branches:
              only:
                - master
      - build-cms-integration-test:
          filters:
            branches:
              only:
                - master
      - build-auth-main:
          filters:
            branches:
              only:
                - master
      - build-postgres-client:
          filters:
            branches:
              only:
                - master
      - build-auth-init:
          filters:
            branches:
              only:
                - master
          requires:
            - build-postgres-client
      - build-mongodb-main:
          filters:
            branches:
              only:
                - master
executors:
  gcloud:
    shell: /bin/sh -le
    docker:
      - image: google/cloud-sdk
jobs:
  build-cms-main:
    executor: gcloud
    steps:
      - docker_package:
          image: "cms.admin"
          path: "cms/main/"
  build-cms-integration-test:
    executor: gcloud
    steps:
      - docker_package:
          image: "integration-test.cms.admin"
          path: "cms/integration-test/main"
  build-auth-main:
    executor: gcloud
    steps:
      - docker_package:
          image: "auth.admin"
          path: "auth/main/"
  build-postgres-client:
    executor: gcloud
    steps:
      - docker_package:
          image: "client.postgres.data"
          path: "postgres/client/"
  build-auth-init:
    executor: gcloud
    steps:
      - docker_package:
          image: "init.auth.admin"
          path: "auth/init/"
  build-mongodb-main:
    executor: gcloud
    steps:
      - docker_package:
          image: "mongodb.data"
          path: "mongodb/main/"
commands:
  docker_package:
    parameters:
      image:
        type: string
      path:
        type: string
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: Setup GCP
          command: |
            echo "${GCP_SERVICE_KEY}" | gcloud auth activate-service-account "${GCP_SERVICE_ACCOUNT}" --key-file=-
            gcloud --quiet config set project ${GCP_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GCP_ZONE}
            gcloud auth configure-docker
      - run:
          name: Docker build
          command: docker build -t tmp << parameters.path >>
      - run:
          name: Set image version
          command: docker inspect tmp --format '{{ index .Config.Labels "version" }}' > /tmp/image_version
      - run:
          name: Docker tag
          command: |
            docker tag tmp "${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/<< parameters.image >>:$(cat /tmp/image_version)"
            docker tag tmp "${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/<< parameters.image >>:latest"
      - deploy:
          name: Docker push
          command: |
            docker push "${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/<< parameters.image >>:$(cat /tmp/image_version)"
            docker push "${DOCKER_REGISTRY}/${GCP_PROJECT_ID}/<< parameters.image >>:latest"
